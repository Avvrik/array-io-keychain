project( KeychainPassEntryApp  )

cmake_minimum_required( VERSION 3.0.2 )

set(CMAKE_CXX_FLAGS "-std=c++14")
set(CMAKE_EXE_LINKER_FLAGS "/SUBSYSTEM:WINDOWS")

SET(BOOST_COMPONENTS)
SET( Boost_USE_STATIC_LIBS ON CACHE STRING "ON or OFF" )

SET(BOOST_ROOT $ENV{BOOST_ROOT})
set(Boost_USE_MULTITHREADED ON)
set(BOOST_ALL_DYN_LINK OFF)

FIND_PACKAGE(Boost 1.65 REQUIRED COMPONENTS ${BOOST_COMPONENTS})
SET(BOOST_LIBRARIES_TEMP ${Boost_LIBRARIES})
FIND_PACKAGE(Boost 1.65 REQUIRED COMPONENTS coroutine)
LIST(APPEND BOOST_COMPONENTS coroutine)
SET(Boost_LIBRARIES ${BOOST_LIBRARIES_TEMP} ${Boost_LIBRARIES})

add_definitions(-DUNICODE -D_UNICODE)

file(GLOB KEYCHAIN_PASS_ENT_SOURCES "./src/*.cpp")
file(GLOB KEYCHAIN_PASS_ENT_INCLUDES "./*.h")
file(GLOB KEYCHAIN_PASS_ENT_RESOURCES "./*.rc")

add_executable(keychain_pass_entry_app ${KEYCHAIN_PASS_ENT_SOURCES} ${KEYCHAIN_PASS_ENT_INCLUDES} ${KEYCHAIN_PASS_ENT_RESOURCES} ${KEYCHAIN_PASS_ENT_APPS})
target_link_libraries(keychain_pass_entry_app Crypt32.lib)

